{"version":3,"sources":["resources/images/phone.png","resources/images/xcvrsion-app-main.png","resources/Colors.ts","resources/images/index.ts","components/AppDemo.tsx","components/Text.tsx","components/Button.tsx","components/Link.tsx","components/ListItem.tsx","components/Section.tsx","components/SectionItem.tsx","sections/BusinessSection.tsx","sections/FooterSection.tsx","sections/HeaderSection.tsx","sections/IntroSection.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Colors","Images","phone","require","xcvrsionAppMain","AppDemo","react_default","a","createElement","Fade_default","style","styles","appDemo","src","alt","app","position","width","top","left","Text","props","combinedStyles","Object","assign","text","h1","h2","center","children","color","fontWeight","textAlign","Button","innerWidth","useWindowSize","combinedStyle","button","combinedTitleStyle","title","titleMobile","titleStyle","className","Text_Text","userSelect","fontSize","marginLeft","backgroundColor","padding","borderRadius","cursor","display","alignItems","justifyContent","Link","link","noUnderline","href","textDecoration","ListItem","listItem","icon","gridTemplateColumns","gridGap","Section","section","combinedContentStyle","sectionContent","contentStyle","flexDirection","maxWidth","SectionItem","sectionItem","sectionItemMobile","bottom","cascade","BusinessSection","Section_Section","SectionItem_SectionItem","gridTemplateRows","height","index_esm","size","ListItem_ListItem","FooterSection","gridAutoColumns","margin","Link_Link","HeaderSection","IntroSection","Button_Button","AppDemo_AppDemo","App","HeaderSection_HeaderSection","IntroSection_IntroSection","BusinessSection_BusinessSection","FooterSection_FooterSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qLCA3BC,SACH,kBADGA,EAEF,iBAFEA,EAGF,aAHEA,EAID,mBAJCA,EAMA,mBANAA,EAOJ,mBCPIC,EAAS,CACpBC,MAAOC,EAAQ,IACfC,gBAAiBD,EAAQ,qBCEdE,EAAc,WACzB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKE,MAAOC,EAAOC,SACjBN,EAAAC,EAAAC,cAAA,OAAKK,IAAKZ,EAAOC,MAAOQ,MAAOC,EAAOT,MAAOY,IAAK,UAClDR,EAAAC,EAAAC,cAAA,OAAKK,IAAKZ,EAAOG,gBAAiBM,MAAOC,EAAOI,IAAKD,IAAK,gBAM5DH,EAAS,CACbC,QAAS,CACPI,SAAU,YAEZd,MAAO,CACLe,MAAO,QAETF,IAAK,CACHC,SAAU,WACVE,IAAK,eACLC,KAAM,gBACNF,MAAO,kBCfEG,EAAuB,SAACC,GACnC,IAAMC,EAAiBC,OAAOC,OAAO,GACnCb,EAAOc,KACPJ,EAAMK,IAAMf,EAAOe,GACnBL,EAAMM,IAAMhB,EAAOgB,GACnBN,EAAMtB,GAAKY,EAAOZ,EAClBsB,EAAMO,QAAUjB,EAAOiB,OACvBP,EAAMX,OAGR,OAAIW,EAAMK,GAENpB,EAAAC,EAAAC,cAAA,MAAIE,MAAOY,GACRD,EAAMQ,UAKTR,EAAMM,GAENrB,EAAAC,EAAAC,cAAA,MAAIE,MAAOY,GACRD,EAAMQ,UAKTR,EAAMtB,EAENO,EAAAC,EAAAC,cAAA,KAAGE,MAAOY,GACPD,EAAMQ,UAMXvB,EAAAC,EAAAC,cAAA,OAAKE,MAAOY,GACTD,EAAMQ,WAKPlB,EAAS,CACbc,KAAM,CACJK,MAAO9B,GAET0B,GAAI,CACFI,MAAO9B,GAET2B,GAAI,CACFG,MAAO9B,EACP+B,WAAY,KAEdhC,EAAG,GAGH6B,OAAQ,CACNI,UAAW,2BCtDFC,SAA2B,SAACZ,GAAU,IACzCa,EAAeC,MAAfD,WAEFE,EAAgBb,OAAOC,OAAO,GAClCb,EAAO0B,OACPhB,EAAMX,OAGF4B,EAAqBf,OAAOC,OAAO,GACvCb,EAAO4B,MACNL,GAAc,KAAQvB,EAAO6B,YAC9BnB,EAAMoB,YAGR,OACEnC,EAAAC,EAAAC,cAAA,OAAKkC,UAAW,SAAUhC,MAAO0B,GAC9Bf,EAAMQ,SACPvB,EAAAC,EAAAC,cAACmC,EAAD,CAAMjC,MAAO4B,GACVjB,EAAMkB,UAMT5B,EAAS,CACb4B,MAAO,CACLT,MAAO9B,EACP4C,WAAY,OACZC,SAAU,SACVC,WAAY,UAEdN,YAAa,CACXK,SAAU,QAEZR,OAAQ,CACNP,MAAO9B,EACP+C,gBAAiB/C,EACjBgD,QAAS,8BACTC,aAAc,OACdC,OAAQ,UACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,WC9CPC,EAAuB,SAACjC,GACnC,IAAMe,EAAgBb,OAAOC,OAAO,GAClCb,EAAO4C,KACPlC,EAAMmC,aAAe7C,EAAO6C,YAC5BnC,EAAMX,OAGR,OACEJ,EAAAC,EAAAC,cAAA,KAAGE,MAAO0B,EAAeqB,KAAMpC,EAAMoC,MAClCpC,EAAMQ,WAKPlB,EAAS,CACb4C,KAAM,CACJzB,MAAO9B,GAETwD,YAAa,CACXE,eAAgB,SCrBPC,EAA+B,SAACtC,GAC3C,IAAMe,EAAgBb,OAAOC,OAAO,GAClCb,EAAOiD,SACPvC,EAAMX,OAGR,OACEJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO0B,GACTf,EAAMwC,KACNxC,EAAMQ,WAKPlB,EAAS,CACbiD,SAAU,CACRT,QAAS,OACTW,oBAAqB,YACrBV,WAAY,WACZW,QAAS,SCnBAC,EAA6B,SAAC3C,GACzC,IAAMe,EAAgBb,OAAOC,OAAO,GAClCb,EAAOsD,QACP5C,EAAMX,OAGFwD,EAAuB3C,OAAOC,OAAO,GACzCb,EAAOwD,eACP9C,EAAM+C,cAGR,OACE9D,EAAAC,EAAAC,cAAA,OAAKE,MAAO0B,GACV9B,EAAAC,EAAAC,cAAA,OAAKE,MAAOwD,GACT7C,EAAMQ,YAMTlB,EAAS,CACbsD,QAAS,CACPhD,MAAO,OACPkC,QAAS,OACTC,WAAY,SACZiB,cAAe,UAEjBF,eAAgB,CACdhB,QAAS,OACTW,oBAAqB,uCACrBQ,SAAU,SACVrD,MAAO,SC7BEsD,SAAqC,SAAClD,GAAU,IACnDa,EAAeC,MAAfD,WAEFZ,EAAiBC,OAAOC,OAAO,GACnCb,EAAO6D,YACNtC,GAAc,KAAQvB,EAAO8D,kBAC9BpD,EAAMX,OAGR,OACEJ,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMmE,QAAM,EAACC,SAAO,GAClBrE,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,cAAchC,MAAOY,GACjCD,EAAMQ,aAMTlB,EAAS,CACb6D,YAAa,CACXxB,QAAS,QAEXyB,kBAAmB,CACjBzB,QAAS,gBC3BA4B,EAAsB,WACjC,OACEtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAACmC,EAAD,CAAMjB,IAAE,EAACE,QAAM,GACZ,yBAGLtB,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAD,CAAapE,MAAO,CAAEqE,iBAAkB,gBACtCzE,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEqD,QAAS,OAAQ9C,MAAO,OAAQkC,QAAS,OAAQW,oBAAqB,WAAYV,WAAY,WAC1G9C,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEqC,gBAAiB/C,EAAeiB,MAAO,GAAI+D,OAAQ,GAAIhC,QAAS,OAAQC,aAAc,SAClG3C,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAenD,MAAO9B,EAAkBkF,KAAM,MAEhD5E,EAAAC,EAAAC,cAACmC,EAAD,CAAMhB,IAAE,GACL,sBAGLrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2E,EAAD,CAAUtB,KAAMvD,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAASC,KAAM,GAAIpD,MAAO9B,KACxCM,EAAAC,EAAAC,cAACmC,EAAD,CAAM5C,GAAC,GACJ,uEAGLO,EAAAC,EAAAC,cAAC2E,EAAD,CAAUtB,KAAMvD,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAASC,KAAM,GAAIpD,MAAO9B,KACxCM,EAAAC,EAAAC,cAACmC,EAAD,CAAM5C,GAAC,GACJ,0FAKTO,EAAAC,EAAAC,cAACsE,EAAD,CAAapE,MAAO,CAAEqE,iBAAkB,gBACtCzE,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEqD,QAAS,OAAQ9C,MAAO,OAAQkC,QAAS,OAAQW,oBAAqB,WAAYV,WAAY,WAC1G9C,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEqC,gBAAiB/C,EAAgBiB,MAAO,GAAI+D,OAAQ,GAAIhC,QAAS,OAAQC,aAAc,SACnG3C,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAgBnD,MAAO9B,EAAkBkF,KAAM,MAEjD5E,EAAAC,EAAAC,cAACmC,EAAD,CAAMhB,IAAE,GACL,yBAGLrB,EAAAC,EAAAC,cAAC2E,EAAD,CAAUtB,KAAMvD,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQC,KAAM,GAAIpD,MAAO9B,KACvCM,EAAAC,EAAAC,cAACmC,EAAD,CAAM5C,GAAC,GACJ,6HC3CFqF,EAAoB,WAC/B,OACE9E,EAAAC,EAAAC,cAACqE,EAAD,CAAST,aAAc,CAAEiB,gBAAiB,QACxC/E,EAAAC,EAAAC,cAACsE,EAAD,KACExE,EAAAC,EAAAC,cAACmC,EAAD,CAAMjC,MAAO,CAAE4E,OAAQ,EAAGxD,MAAO9B,GAAkBD,GAAC,GACjD,wBAGLO,EAAAC,EAAAC,cAACsE,EAAD,KACExE,EAAAC,EAAAC,cAAC+E,EAAD,CAAM7E,MAAO,CAAE4E,OAAQ,EAAGxD,MAAO9B,GAAkBwD,aAAW,EAACC,KAAM,4BAClE,wBCXE+B,EAAoB,WAC/B,OACElF,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAD,CAAapE,MAAO,CAAEyC,QAAS,SAC7B7C,EAAAC,EAAAC,cAAC+E,EAAD,CAAM/B,aAAW,EAACC,KAAM,uBAAwB/C,MAAO,CAAEqB,WAAY,MAClE,eCHE0D,SAAmB,WAC9B,OACEnF,EAAAC,EAAAC,cAAA,OAAKkC,UAAW,gBACdpC,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAD,CAAapE,MAAO,CAAEqE,iBAAkB,gBACtCzE,EAAAC,EAAAC,cAACmC,EAAD,CAAMjB,IAAE,GACL,8CAEHpB,EAAAC,EAAAC,cAACmC,EAAD,CAAM5C,GAAC,GACJ,+FAEHO,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEO,MAAO,OAAQkC,QAAS,OAAQY,QAAS,OAAQD,oBAAqB,yCAClFxD,EAAAC,EAAAC,cAACkF,EAAD,CAAQnD,MAAO,0BAA2BkB,KAAK,IAC7CnD,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAASC,KAAM,MAEjB5E,EAAAC,EAAAC,cAACkF,EAAD,CAAQnD,MAAO,2BAA4BkB,KAAK,IAC9CnD,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAcC,KAAM,QAI1B5E,EAAAC,EAAAC,cAACsE,EAAD,KACExE,EAAAC,EAAAC,cAACmF,EAAD,WCZJhF,EAAS,CACbI,IAAK,CACHoC,QAAS,OACTC,WAAY,SACZiB,cAAe,WAIJuB,EAnBC,WACd,OACEtF,EAAAC,EAAAC,cAAA,OAAKE,MAAOC,EAAOI,KACjBT,EAAAC,EAAAC,cAACqF,EAAD,MACAvF,EAAAC,EAAAC,cAACsF,EAAD,MACAxF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACwF,EAAD,QCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZJC,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b5f2a542.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/phone.27011c9f.png\";","module.exports = __webpack_public_path__ + \"static/media/xcvrsion-app-main.4e7b91d5.png\";","export const Colors = {\r\n  accent: 'rgb(88,86,214)',\r\n  accent2: 'rgb(255,45,85)',\r\n  primary: 'rgb(0,0,0)',          // accent, bold text\r\n  darkGray: 'rgb(152,152,157)',   // main text\r\n  midGray: 'rgb(174,174,178)',    // disabled\r\n  lightGray: 'rgb(242,242,247)',  // borders\r\n  white: 'rgb(255,255,255)',      // background\r\n};","export const Images = {\r\n  phone: require('./phone.png'),\r\n  xcvrsionAppMain: require('./xcvrsion-app-main.png'),\r\n};","import React, { FC, CSSProperties } from 'react';\r\nimport { Images } from '../resources';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nexport const AppDemo: FC = () => {\r\n  return (\r\n    <Fade>\r\n      <div style={styles.appDemo}>\r\n        <img src={Images.phone} style={styles.phone} alt={'phone'} />\r\n        <img src={Images.xcvrsionAppMain} style={styles.app} alt={'app-demo'} />\r\n      </div>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  appDemo: {\r\n    position: 'relative',\r\n  } as CSSProperties,\r\n  phone: {\r\n    width: '100%',\r\n  } as CSSProperties,\r\n  app: {\r\n    position: 'absolute',\r\n    top: '8.452250274%',\r\n    left: '15.166340509%',\r\n    width: '68.395303327%',\r\n  } as CSSProperties,\r\n};","import React, { FC, CSSProperties } from 'react';\r\nimport { Colors } from '../resources';\r\n\r\nexport interface ITextProps {\r\n  style?: CSSProperties;\r\n  h1?: boolean;\r\n  h2?: boolean;\r\n  p?: boolean;\r\n  center?: boolean;\r\n}\r\n\r\nexport const Text: FC<ITextProps> = (props) => {\r\n  const combinedStyles = Object.assign({},\r\n    styles.text,\r\n    props.h1 && styles.h1,\r\n    props.h2 && styles.h2,\r\n    props.p && styles.p,\r\n    props.center && styles.center,\r\n    props.style,\r\n  );\r\n\r\n  if (props.h1) {\r\n    return (\r\n      <h1 style={combinedStyles}>\r\n        {props.children}\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  if (props.h2) {\r\n    return (\r\n      <h2 style={combinedStyles}>\r\n        {props.children}\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  if (props.p) {\r\n    return (\r\n      <p style={combinedStyles}>\r\n        {props.children}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={combinedStyles}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  text: {\r\n    color: Colors.darkGray,\r\n  } as CSSProperties,\r\n  h1: {\r\n    color: Colors.primary,\r\n  } as CSSProperties,\r\n  h2: {\r\n    color: Colors.primary,\r\n    fontWeight: 300,\r\n  } as CSSProperties,\r\n  p: {\r\n    // N/A\r\n  } as CSSProperties,\r\n  center: {\r\n    textAlign: 'center',\r\n  } as CSSProperties,\r\n};","import React, { FC, CSSProperties } from 'react';\r\nimport { Colors } from '../resources';\r\nimport { Text } from './Text';\r\nimport useWindowSize from '@rehooks/window-size';\r\nimport './Button.css';\r\n\r\nexport interface IButtonProps {\r\n  href?: string;\r\n  title?: string;\r\n  style?: CSSProperties;\r\n  titleStyle?: CSSProperties;\r\n}\r\n\r\nexport const Button: FC<IButtonProps> = (props) => {\r\n  const { innerWidth } = useWindowSize();\r\n\r\n  const combinedStyle = Object.assign({},\r\n    styles.button,\r\n    props.style,\r\n  );\r\n\r\n  const combinedTitleStyle = Object.assign({},\r\n    styles.title,\r\n    (innerWidth <= 450) && styles.titleMobile,\r\n    props.titleStyle,\r\n  );\r\n\r\n  return (\r\n    <div className={'Button'} style={combinedStyle}>\r\n      {props.children}\r\n      <Text style={combinedTitleStyle}>\r\n        {props.title}\r\n      </Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  title: {\r\n    color: Colors.white,\r\n    userSelect: 'none',\r\n    fontSize: '0.7rem',\r\n    marginLeft: '0.5rem',\r\n  } as CSSProperties,\r\n  titleMobile: {\r\n    fontSize: '1rem',\r\n  } as CSSProperties,\r\n  button: {\r\n    color: Colors.white,\r\n    backgroundColor: Colors.accent,\r\n    padding: '0.5rem 0.5rem 0.5rem 0.5rem',\r\n    borderRadius: '1rem',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  } as CSSProperties,\r\n};","import React, { FC, CSSProperties } from 'react';\r\nimport { Colors } from '../resources';\r\n\r\nexport interface ILinkProps {\r\n  style?: CSSProperties;\r\n  href?: string;\r\n  noUnderline?: boolean;\r\n}\r\n\r\nexport const Link: FC<ILinkProps> = (props) => {\r\n  const combinedStyle = Object.assign({},\r\n    styles.link,\r\n    props.noUnderline && styles.noUnderline,\r\n    props.style,\r\n  );\r\n\r\n  return (\r\n    <a style={combinedStyle} href={props.href}>\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  link: {\r\n    color: Colors.accent,\r\n  } as CSSProperties,\r\n  noUnderline: {\r\n    textDecoration: 'none',\r\n  } as CSSProperties,\r\n}","import React, { FC, CSSProperties } from 'react';\r\n\r\nexport interface IListItemProps {\r\n  style?: CSSProperties;\r\n  icon: any;\r\n}\r\n\r\nexport const ListItem: FC<IListItemProps> = (props) => {\r\n  const combinedStyle = Object.assign({},\r\n    styles.listItem,\r\n    props.style,\r\n  );\r\n\r\n  return (\r\n    <div style={combinedStyle}>\r\n      {props.icon}\r\n      {props.children}\r\n    </div >\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  listItem: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto auto',\r\n    alignItems: 'baseline',\r\n    gridGap: '1rem',\r\n  },\r\n};","import React, { FC, CSSProperties } from 'react';\r\n\r\nexport interface ISectionProps {\r\n  style?: CSSProperties;\r\n  contentStyle?: CSSProperties;\r\n}\r\n\r\nexport const Section: FC<ISectionProps> = (props) => {\r\n  const combinedStyle = Object.assign({},\r\n    styles.section,\r\n    props.style,\r\n  );\r\n\r\n  const combinedContentStyle = Object.assign({},\r\n    styles.sectionContent,\r\n    props.contentStyle,\r\n  );\r\n\r\n  return (\r\n    <div style={combinedStyle}>\r\n      <div style={combinedContentStyle}>\r\n        {props.children}\r\n      </div >\r\n    </div >\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  section: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  } as CSSProperties,\r\n  sectionContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fit, minmax(320px, 1fr))',\r\n    maxWidth: '1200px',\r\n    width: '100%',\r\n  } as CSSProperties,\r\n};","import React, { FC, CSSProperties } from 'react';\r\nimport './SectionItem.css';\r\nimport useWindowSize from '@rehooks/window-size';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nexport interface ISectionItemProps {\r\n  style?: CSSProperties;\r\n}\r\n\r\nexport const SectionItem: FC<ISectionItemProps> = (props) => {\r\n  const { innerWidth } = useWindowSize();\r\n\r\n  const combinedStyles = Object.assign({},\r\n    styles.sectionItem,\r\n    (innerWidth <= 800) && styles.sectionItemMobile,\r\n    props.style,\r\n  );\r\n\r\n  return (\r\n    <Fade bottom cascade>\r\n      <div className='SectionItem' style={combinedStyles}>\r\n        {props.children}\r\n      </div>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  sectionItem: {\r\n    padding: '2rem',\r\n  } as CSSProperties,\r\n  sectionItemMobile: {\r\n    padding: '1rem',\r\n  } as CSSProperties,\r\n};","import React, { FC } from 'react';\r\nimport { Section, SectionItem, Text, ListItem } from '../components';\r\nimport { FaVrCardboard, FaHandsHelping, FaPlus, FaCheck } from 'react-icons/fa';\r\nimport { Colors } from '../resources';\r\n\r\nexport const BusinessSection: FC = () => {\r\n  return (\r\n    <div>\r\n      <Section>\r\n        <Text h1 center>\r\n          {'Let\\'s talk business.'}\r\n        </Text>\r\n      </Section>\r\n      <Section>\r\n        <SectionItem style={{ gridTemplateRows: '0fr 0fr 0fr' }}>\r\n          <div style={{ gridGap: '1rem', width: '100%', display: 'grid', gridTemplateColumns: '0fr auto', alignItems: 'center' }}>\r\n            <div style={{ backgroundColor: Colors.accent, width: 32, height: 32, padding: '16px', borderRadius: '100%' }}>\r\n              <FaVrCardboard color={Colors.lightGray} size={32} />\r\n            </div>\r\n            <Text h2>\r\n              {'Share your world.'}\r\n            </Text>\r\n          </div>\r\n          <div>\r\n            <ListItem icon={<FaCheck size={18} color={Colors.accent} />}>\r\n              <Text p>\r\n                {'We provide the headsets, content, and labor to make things happen.'}\r\n              </Text>\r\n            </ListItem>\r\n            <ListItem icon={<FaCheck size={18} color={Colors.accent} />}>\r\n              <Text p>\r\n                {'We make sure that everyone is able to join in on the experiences you want to share.'}\r\n              </Text>\r\n            </ListItem>\r\n          </div>\r\n        </SectionItem>\r\n        <SectionItem style={{ gridTemplateRows: '0fr 0fr 0fr' }}>\r\n          <div style={{ gridGap: '1rem', width: '100%', display: 'grid', gridTemplateColumns: '0fr auto', alignItems: 'center' }}>\r\n            <div style={{ backgroundColor: Colors.accent2, width: 32, height: 32, padding: '16px', borderRadius: '100%' }}>\r\n              <FaHandsHelping color={Colors.lightGray} size={32} />\r\n            </div>\r\n            <Text h2>\r\n              {'We are on your team.'}\r\n            </Text>\r\n          </div>\r\n          <ListItem icon={<FaPlus size={18} color={Colors.accent2} />}>\r\n            <Text p>\r\n              {'Whether you are a university, real estate agency, music company, or another organization, we can get things started.'}\r\n            </Text>\r\n          </ListItem>\r\n        </SectionItem>\r\n      </Section>\r\n    </div>\r\n  );\r\n};","import React, { FC } from 'react';\r\nimport { Section, SectionItem, Text, Link } from '../components';\r\nimport { Colors } from '../resources';\r\n\r\nexport const FooterSection: FC = () => {\r\n  return (\r\n    <Section contentStyle={{ gridAutoColumns: '1fr' }}>\r\n      <SectionItem>\r\n        <Text style={{ margin: 0, color: Colors.primary }} p>\r\n          {'© Xcvrsion, Inc.'}\r\n        </Text>\r\n      </SectionItem>\r\n      <SectionItem>\r\n        <Link style={{ margin: 0, color: Colors.primary }} noUnderline href={'mailto:info@xcvrsion.com'}>\r\n          {'info@xcvrsion.com'}\r\n        </Link>\r\n      </SectionItem>\r\n    </Section>\r\n  );\r\n};","import React, { FC } from 'react';\r\nimport { Section, SectionItem, Link } from '../components';\r\n\r\nexport const HeaderSection: FC = () => {\r\n  return (\r\n    <Section>\r\n      <SectionItem style={{ display: 'flex' }}>\r\n        <Link noUnderline href={'https://xcvrsion.com'} style={{ fontWeight: 700 }}>\r\n          {'Xcvrsion'}\r\n        </Link>\r\n      </SectionItem>\r\n    </Section>\r\n  );\r\n};","import React, { FC } from 'react';\r\nimport { Section, SectionItem, Button, Text, AppDemo } from '../components';\r\nimport { FaGooglePlay, FaApple } from 'react-icons/fa';\r\nimport './IntroSection.css';\r\n\r\nexport const IntroSection: FC = () => {\r\n  return (\r\n    <div className={'IntroSection'}>\r\n      <Section>\r\n        <SectionItem style={{ gridTemplateRows: '0fr 0fr 0fr' }}>\r\n          <Text h1>\r\n            {'Tour like never before, quicker than ever.'}\r\n          </Text>\r\n          <Text p>\r\n            {'Take a virtual trip to your favorite university, a home of interest, or the latest concert.'}\r\n          </Text>\r\n          <div style={{ width: '100%', display: 'grid', gridGap: '1rem', gridTemplateColumns: 'repeat(auto-fit, minmax(230px, 1fr))' }}>\r\n            <Button title={'Download from App Store'} href=''>\r\n              <FaApple size={18} />\r\n            </Button>\r\n            <Button title={'Download from Play Store'} href=''>\r\n              <FaGooglePlay size={18} />\r\n            </Button>\r\n          </div>\r\n        </SectionItem>\r\n        <SectionItem>\r\n          <AppDemo />\r\n        </SectionItem>\r\n      </Section>\r\n    </div>\r\n  );\r\n};","import React, { FC, CSSProperties } from 'react';\r\nimport { IntroSection, BusinessSection, HeaderSection, FooterSection } from './sections';\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <div style={styles.app}>\r\n      <HeaderSection />\r\n      <IntroSection />\r\n      <BusinessSection />\r\n      <FooterSection />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  app: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  } as CSSProperties,\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // 'Content is cached for offline use.' message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}